#!/usr/bin/env python

# Headers
__author__ = "Somsubhra Bairi"
__email__ = "somsubhra.bairi@gmail.com"
__license__ = "WTFPL (Do What The Fuck You Want to Public License)"
__version__ = "0.1.0"

# All imports
import sys
import json
import urllib2
import io
from PIL import Image

# Define constants
API_ROOT = "http://xkcd.com/"


# The XKCD Command Line class
class XKCDCL:
    # Constructor for the XKCDCL
    def __init__(self):
        self.arg = ""
        self.api_url = ""
        self.comic_url = ""

        if len(sys.argv) >= 2:
            self.arg = sys.argv[1]

        self.display_comic()

    # Fetch the API url corresponding to current comic
    def get_api_url(self):
        if self.arg == "":
            # Fetch the currrent comic api url
            self.api_url = API_ROOT + "info.0.json"
        elif self.arg == "about":
            # Show about info
            self.show_about_info()
            sys.exit()
        else:
            # Fetch the api url of comic at given point
            self.api_url = API_ROOT + self.arg + "/info.0.json"

    # Get the comic url corresponding to current API call
    def get_comic_url(self):
        self.get_api_url()

        try:
            # Fetch the data from API endpoint
            data = json.load(urllib2.urlopen(self.api_url))
        except:
            return

        # Get the image URL from json data
        self.comic_url = data["img"]

    # Display the comic in the GUI system
    def display_comic(self):
        self.get_comic_url()

        try:
            # Fetch the image data
            fd = urllib2.urlopen(self.comic_url)
            comic_file = io.BytesIO(fd.read())

            # Show the image using PIL
            comic = Image.open(comic_file)
            comic.show()
        except:
            print "Error: The comic does not exist"
            return

    # Show the about data of program
    def show_about_info(self):
        print "XKCD Command Line Utility (v" + __version__ + ")"
        print "Written by " + __author__ + " <" + __email__ + ">"
        print "Licensed under " + __license__

# The main method
def main():
    XKCDCL()

# Invocation of the main method
if __name__ == "__main__":
    main()
